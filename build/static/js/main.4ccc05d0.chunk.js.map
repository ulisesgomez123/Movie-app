{"version":3,"sources":["components/About/About.module.css","components/Movie/Movie.module.css","actions/index.js","components/Favorites/Favorites.js","components/Buscador/Buscador.js","img/pelicula.png","components/NavBar/NavBar.js","components/Movie/Movie.js","components/About/About.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","apiKey","ConnectedList","className","this","props","movies","map","u","to","imdbID","Title","onClick","removeMovieFavorite","id","Component","connect","state","moviesFavorites","payload","type","Buscador","title","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","autoComplete","onChange","handleChange","placeholder","activeClassName","addMovieFavorite","moviesLoaded","dispatch","movie","titulo","fetch","then","response","json","NavBar","src","img","alt","exact","Movie","getMovieDetail","match","params","css","uno","corazon","p","Poster","ll","Year","Director","Genre","Actors","Plot","React","movieDetail","idMovie","div","hola","App","Fragment","path","component","Favorites","About","Boolean","window","location","hostname","initialState","store","createStore","action","Search","filter","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ccc05d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hola\":\"About_hola__1f4fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"corazon\":\"Movie_corazon__ToH6s\",\"uno\":\"Movie_uno__3liYV\",\"p\":\"Movie_p__2yAUy\",\"img\":\"Movie_img__3oD4M\",\"ll\":\"Movie_ll__2hkKU\"};","const apiKey= '3ef2dbda';\r\n\r\nexport function addMovieFavorite(payload) {\r\n    return { type: \"ADD_MOVIE_FAVORITE\", payload };\r\n  }\r\n  \r\n  export function getMovies(titulo) {\r\n    return function(dispatch) {\r\n      return fetch(`http://www.omdbapi.com/?apikey=${apiKey}&s=${titulo}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          dispatch({ type: \"GET_MOVIES\", payload: json });\r\n        });\r\n    };\r\n  }\r\n\r\n  export function removeMovieFavorite(payload) {\r\n    return { type: \"REMOVE_MOVIE_FAVORITE\", payload };\r\n  }\r\n  \r\n  export function getMovieDetail(idMovie) {\r\n    return function(dispatch) {\r\n      return fetch(`http://www.omdbapi.com/?apikey=${apiKey}&i=${idMovie}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          dispatch({ type: \"GET_MOVIE_DETAIL\", payload: json });\r\n        });\r\n    };\r\n  }","import React, { Component } from \"react\";\n import { connect } from \"react-redux\";\n import {NavLink} from 'react-router-dom';\nimport './Favorites.css';\nimport { removeMovieFavorite } from \"../../actions\";\n\nexport class ConnectedList extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"favorites\">Favorite movies</h1>\n        <ul>\n        {this.props.movies?.map(u =>\n         <div key={u.id} className='hola'>\n             <NavLink to={`/movie/${u.imdbID}`} >\n            <div className=\"divsito\"> <div className=\"p\">{`  ${u.Title} `} </div> </div>\n            </NavLink>\n            <button className=\"botoncito\" \n            onClick={() => this.props.removeMovieFavorite(u.id)} \n            >Remove\n            </button>\n            </div>\n         )} \n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps= (state) => {\n  return {\n    movies: state. moviesFavorites\n  }\n}\n\nexport default connect(mapStateToProps,{removeMovieFavorite})(ConnectedList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from 'react-router-dom';\nimport './Buscador.css';\nimport {getMovies,addMovieFavorite} from '../../actions/';\n\nexport class Buscador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n  }\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.getMovies(this.state.title)\n  }\n\n  render() {\n    const {title}= this.state\n    return (\n      <div>\n        <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <div className=\"div\">Search your movie here  </div>\n            <input\n              type=\"text\"\n              id=\"title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={(e) => this.handleChange(e)}\n              placeholder='   title...'\n            />\n                <button type=\"submit\" className=\"btn\">  Search  </button>\n\n                <div className=\"info\">\n            Click on the name for more information\n          </div>\n           \n          </div>\n        \n        </form>\n        <ul>\n         {this.props.movies?.map( u =>\n         <div key={u.imdbID} className='hola'>\n           <NavLink to={`/movie/${u.imdbID}`} className='inactive' activeClassName=\"hola\">\n            <div className=\"divsito\"> <div className=\"p\">{`  ${u.Title} `} </div> </div>\n            </NavLink>\n            \n            <button className=\"los\" \n            onClick={() => \n              this.props.addMovieFavorite({Title: u.Title, id: u.imdbID})\n            } \n            >FAV\n            </button>\n            </div>\n         )} \n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesLoaded\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\n    getMovies: title => dispatch(getMovies(title))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Buscador);\n\n","export default __webpack_public_path__ + \"static/media/pelicula.9f56c5c3.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport img from '../../img/pelicula.png';\n\nimport './Navbar.css';\n\nexport default function NavBar() {\n    return (\n        <header className=\"navbar\">\n            <div>\n            <img className='img' src={img} alt='icono'/>\n            </div>\n            <div><h2 className='h2'>Movie App</h2></div>\n            <nav>\n                <ul className=\"list\">\n                    <li className='list-item'>\n                        <NavLink exact to=\"/\" >Home</NavLink>\n                        <NavLink to=\"/favs\">Favorites</NavLink>\n                        <NavLink to=\"/about\">About</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}","import React from 'react';\nimport { connect} from 'react-redux';\nimport { getMovieDetail } from '../../actions/index';\nimport css from './Movie.module.css';\n\nclass Movie extends React.Component {\n     constructor(props) {\n        super(props)\n     }\ncomponentDidMount() {\n    this.props.getMovieDetail(this.props.match.params.id)\n}\n\n    render() {\n        return (\n            <div >\n            <p> Movie details</p>\n            <div id={css.uno}>\n            <div className={css.corazon}><p className={css.p}>Poster:</p><img className={css.img} src={this.props.movie.Poster} alt='Poster of the movie'/></div>\n            <div className={css.ll}><p className={css.p}>Movie:</p> <h1 className='h1'>{this.props.movie.Title}</h1> </div>\n            <div className={css.ll}><p className={css.p}>Year:</p> <h1 className='h1'>{this.props.movie.Year}</h1></div>\n            <div className={css.ll}><p className={css.p}>Director:</p> <h1 className='h1'>{this.props.movie.Director}</h1></div>\n            <div className={css.ll}><p className={css.p}>Genre:</p> <h1 className='h1'>{this.props.movie.Genre}</h1></div>\n            <div className={css.corazon}><p className={css.p}>Actors:</p> <h1 className='h1'>{this.props.movie.Actors}</h1></div>\n            <div className={css.corazon}><p className={css.p}>Plot:</p> <h1 className='h1'>{this.props.movie.Plot}</h1></div>\n            \n            </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n return {\n    movie: state.movieDetail\n }\n}\n    \n\n\nexport default connect(mapStateToProps,{getMovieDetail})(Movie);","import React from \"react\";\r\nimport css from './About.module.css';\r\n\r\nexport default function div () {\r\nreturn (\r\n    <div className={css.hola}>\r\n<h1>Hola</h1>\r\n\r\n    </div>\r\n\r\n)\r\n}","import React from \"react\";\n\nimport Favorites from \"./components/Favorites/Favorites\";\nimport Buscador from \"./components/Buscador/Buscador\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie/Movie\";\nimport About  from './components/About/About'\n\nfunction App() {\n  return (\n      <React.Fragment>\n          <NavBar />\n          <Route exact path=\"/\" component={Buscador} />\n          <Route path=\"/favs\" component={Favorites} />\n          <Route path=\"/movie/:id\" component={Movie} />\n          <Route path='/about' component={About}/>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    moviesFavorites: [],\r\n    moviesLoaded: [],\r\n    movieDetail: {}\r\n  };\r\n   \r\n  export default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"ADD_MOVIE_FAVORITE\":\r\n      return {\r\n        ...state, \r\n        moviesFavorites: [...state.moviesFavorites, action.payload]\r\n      }\r\n      case \"GET_MOVIES\":\r\n        return {\r\n            ...state,\r\n            moviesLoaded: action.payload.Search\r\n        }\r\n        case \"REMOVE_MOVIE_FAVORITE\":\r\n            return {\r\n                ...state,\r\n                moviesFavorites: state.moviesFavorites.filter(e => \r\n                    e.id !== action.payload )\r\n            }\r\n        case \"GET_MOVIE_DETAIL\":\r\n            return {\r\n                ...state,\r\n                movieDetail: action.payload\r\n            }\r\n      default: return state;\r\n    }\r\n  }\r\n  \r\n  ","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n  \r\n  export default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}